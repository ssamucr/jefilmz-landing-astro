---
// Hero section component
---

<section class="hero" id="hero">
  <!-- <div class="hero-background">
    Fondo animado creativo
    <div class="bg-animation">
      <div class="floating-circle circle-1"></div>
      <div class="floating-circle circle-2"></div>
      <div class="floating-circle circle-3"></div>
      <div class="gradient-blob blob-1"></div>
      <div class="gradient-blob blob-2"></div>
    </div>
  </div> -->

  <div class="hero-container">
    <div class="hero-content">
      <div class="hero-text">
        <h1 class="hero-title">
          <span class="brand-name">JE FILMZ</span>
        </h1>
        <p class="hero-subtitle">
          Fotografía • Video • Contenido Aéreo
        </p>
        <a href="#portfolio">

          <button class="cssbuttons-io">
              <span>
                Ver mi trabajo
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M7 17L17 7M17 7H7M17 7V17"/>
                </svg>
              </span>
          </button>
        

        </a>
      </div>

      <div class="hero-description">
        <div class="description-content">
          <h3>Creando historias visuales</h3>
          <p>
            Especializado en creación de contenido para redes sociales 
            y tomas aéreas profesionales.
          </p>
          <div class="stats">
            <div class="stat">
              <span class="stat-number">5+</span>
              <span class="stat-label">Eventos</span>
            </div>
            <div class="stat">
              <span class="stat-number">100+</span>
              <span class="stat-label">Contenidos</span>
            </div>
            <div class="stat">
              <span class="stat-number">2+</span>
              <span class="stat-label">Años</span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="hero-image">
      <div class="image-container parallax-container">
        <!-- Placeholder en svg -->
        <!-- src="/images/jefilmz-portrait.svg"  -->
        <img 
          src="/images/juan-hero.png"
          alt="JE FILMZ tomando una fotografía" 
          class="portrait-image parallax-image"
          id="hero-parallax-image"
        />
      </div>
    </div>
  </div>

  <!-- Scroll indicator -->
  <div class="scroll-indicator">
    <div class="scroll-arrow">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M7 13l3 3 7-7M7 6l3 3 7-7"/>
      </svg>
    </div>
  </div>
</section>

<style>
  .hero {
    position: relative;
    min-height: calc(100vh - 70px); /* Restar altura del navbar */
    display: flex;
    align-items: center;
    overflow: hidden;
    padding-top: 70px; /* Espacio para navbar fijo */
  }

  .hero-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
  }

  .bg-animation {
    position: relative;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  }

  .floating-circle {
    position: absolute;
    border-radius: 50%;
    background: linear-gradient(45deg, var(--color-accent), var(--color-accent-alt));
    opacity: 0.1;
    animation: float 6s ease-in-out infinite;
  }

  .circle-1 {
    width: 200px;
    height: 200px;
    top: 10%;
    left: 10%;
    animation-delay: 0s;
  }

  .circle-2 {
    width: 150px;
    height: 150px;
    top: 60%;
    right: 15%;
    animation-delay: 2s;
  }

  .circle-3 {
    width: 100px;
    height: 100px;
    bottom: 20%;
    left: 60%;
    animation-delay: 4s;
  }

  .gradient-blob {
    position: absolute;
    border-radius: 50%;
    filter: blur(40px);
    opacity: 0.3;
    animation: float 8s ease-in-out infinite;
  }

  .blob-1 {
    width: 300px;
    height: 300px;
    background: var(--color-accent);
    top: 20%;
    right: 20%;
    animation-delay: 1s;
  }

  .blob-2 {
    width: 250px;
    height: 250px;
    background: var(--color-accent-alt);
    bottom: 30%;
    left: 20%;
    animation-delay: 3s;
  }

  /* Ver mi trabajo boton */
  /* From Uiverse.io by adamgiebl */ 
  .cssbuttons-io {
    position: relative;
    font-family: inherit;
    font-weight: 500;
    font-size: 18px;
    letter-spacing: 0.05em;
    border-radius: 0.8em;
    cursor: pointer;
    border: none;
    background: linear-gradient(135deg, var(--color-dark), var(--color-accent));
    color: ghostwhite;
    overflow: hidden;
  }

  .cssbuttons-io svg {
    width: 1.2em;
    height: 1.2em;
    margin-right: 0.5em;
  }

  .cssbuttons-io span {
    position: relative;
    z-index: 10;
    transition: color 0.4s;
    display: inline-flex;
    align-items: center;
    padding: 0.8em 1.2em 0.8em 1.05em;
  }

  .cssbuttons-io::before,
  .cssbuttons-io::after {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
  }

  .cssbuttons-io::before {
    content: "";
    background: #000;
    width: 120%;
    left: -10%;
    transform: skew(30deg);
    transition: transform 0.4s cubic-bezier(0.3, 1, 0.8, 1);
  }

  .cssbuttons-io:hover::before {
    transform: translate3d(100%, 0, 0);
  }

  .cssbuttons-io:active {
    transform: scale(0.95);
  }

  /* ------------------------------------------------------------------- */

  .hero-container {
    /* max-width: 1200px; */
    margin: 0 auto;
    padding: 0 var(--spacing-sm);
    display: grid;
    grid-template-columns: 0.5fr repeat(3, 1fr) 0.5fr;
    gap: var(--spacing-xl);
    align-items: center;
    min-height: 80vh;
  }

  .hero-content {
    grid-column: 2 / span 2;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-lg);
    align-items: start;
  }

  .hero-text {
    animation: fadeInUp 1s ease-out;
  }

  .brand-name {
    font-size: clamp(3rem, 6vw, 5rem);
    font-weight: 800;
    background: linear-gradient(135deg, var(--color-dark), var(--color-accent));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    letter-spacing: -0.02em;
    margin-bottom: var(--spacing-sm);
    display: block;
  }

  .hero-subtitle {
    font-size: 1.2rem;
    color: var(--color-gray-dark);
    margin-bottom: var(--spacing-md);
    font-weight: 500;
  }

  .hero-cta {
    font-size: 1.1rem;
    padding: var(--spacing-sm) var(--spacing-md);
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
  }

  .hero-description {
    animation: fadeInUp 1s ease-out 0.3s both;
  }

  .description-content h3 {
    color: var(--color-dark);
    margin-bottom: var(--spacing-sm);
    font-size: 1.3rem;
  }

  .description-content p {
    color: var(--color-gray-dark);
    line-height: 1.7;
    margin-bottom: var(--spacing-md);
  }

  .stats {
    display: flex;
    gap: var(--spacing-md);
  }

  .stat {
    text-align: center;
  }

  .stat-number {
    display: block;
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--color-accent);
    font-family: var(--font-display);
  }

  .stat-label {
    font-size: 0.9rem;
    color: var(--color-gray);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .hero-image {
    grid-column: 4 / span 2;
    height: 100%;
    animation: fadeInUp 1s ease-out 0.6s both;
  }

  .image-container {
    position: absolute;
    right: -10%;
    bottom: -10%;
    width: 130%;
    height: 130%;
    border-radius: 20px;
    overflow: hidden;
    /* transition: transform var(--transition-normal); */
  }

  .parallax-container {
    will-change: transform;
  }

  .parallax-image {
    will-change: transform;
    transition: transform 0.1s ease-out;
  }

  /* .image-container:hover {
    transform: rotate(0deg) scale(1.05);
  } */

  .portrait-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    filter: drop-shadow(0px 0px 5px rgba(0, 0, 0, 0.5));
  }

  .scroll-indicator {
    position: absolute;
    bottom: var(--spacing-md);
    left: 50%;
    transform: translateX(-50%);
    animation: float 2s ease-in-out infinite;
  }

  .scroll-arrow {
    color: var(--color-accent);
    animation: bounce 2s infinite;
  }

  @keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
      transform: translateY(0);
    }
    40%, 43% {
      transform: translateY(-10px);
    }
    70% {
      transform: translateY(-5px);
    }
    90% {
      transform: translateY(-2px);
    }
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .hero-container {
      grid-template-columns: 1fr;
      gap: var(--spacing-lg);
      text-align: center;
    }

    .hero-content {
      grid-template-columns: 1fr;
      gap: var(--spacing-md);
      text-align: center;
    }

    .hero-image {
      justify-self: center;
      order: -1;
    }

    .image-container {
      width: 250px;
      height: 300px;
    }
  }

  @media (max-width: 768px) {
    .hero {
      padding-top: 120px; /* Más espacio para navbar móvil */
    }

    .hero-container {
      gap: var(--spacing-md);
    }

    .brand-name {
      font-size: 3rem;
    }

    .hero-subtitle {
      font-size: 1.1rem;
    }

    .stats {
      justify-content: center;
    }

    .image-container {
      width: 200px;
      height: 250px;
    }
  }
</style>

<script>
  // Efecto Parallax para la imagen del hero
  document.addEventListener('DOMContentLoaded', () => {
    const parallaxImage = document.getElementById('hero-parallax-image');
    const heroSection = document.getElementById('hero');
    
    if (parallaxImage && heroSection) {
      let ticking = false;

      function updateParallax() {
        if (!parallaxImage || !heroSection) return;
        
        const scrolled = window.pageYOffset;
        const heroHeight = heroSection.offsetHeight;
        const heroTop = heroSection.offsetTop;
        
        // Solo aplicar parallax mientras la sección hero esté visible
        if (scrolled < heroHeight + heroTop) {
          // Movimiento sutil - la imagen se mueve más lento que el scroll
          const parallaxSpeed = 0.2; // Ajusta este valor para más/menos efecto
          const yPos = scrolled * parallaxSpeed;
          
          // Aplicar transform con GPU acceleration
          parallaxImage.style.transform = `translate3d(0, ${yPos}px, 0)`;
        }
        
        ticking = false;
      }

      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(updateParallax);
          ticking = true;
        }
      }

      // Optimización: usar requestAnimationFrame para smooth animation
      window.addEventListener('scroll', requestTick, { passive: true });
      
      // Ejecutar una vez al cargar
      updateParallax();
    }
  });
</script>
